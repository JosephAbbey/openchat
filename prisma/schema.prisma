generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["planetScaleMode"]
}

datasource db {
    provider          = "mysql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    planetScaleMode   = true
}

model Account {
    id                 String    @id @default(cuid())
    userId             String
    providerType       String
    providerId         String
    providerAccountId  Int
    refreshToken       String?
    accessToken        String?
    accessTokenExpires DateTime?
    createdAt          DateTime  @default(now())
    updatedAt          DateTime  @updatedAt
    user               User      @relation(fields: [userId], references: [id])

    @@unique([providerId, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    userId       String
    expires      DateTime
    sessionToken String   @unique
    accessToken  String   @unique
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    user         User     @relation(fields: [userId], references: [id])
}

model User {
    id            String    @id @default(cuid())
    name          String
    email         String?   @unique
    emailVerified DateTime?
    image         String    @default("/defaultavatar.png")
    theme         String    @default("system")
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    threads       Thread[]
    Messages      Message[]
    accounts      Account[]
    sessions      Session[]
}

model VerificationRequest {
    id         String   @id @default(cuid())
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@unique([identifier, token])
}

model Thread {
    id       String    @id @default(cuid())
    name     String
    image    String    @default("/defaultgroup.png")
    users    User[]
    Messages Message[]
}

model Message {
    id        String   @id @default(cuid())
    threadId  String
    thread    Thread   @relation(fields: [threadId], references: [id])
    fromId    String
    from      User     @relation(fields: [fromId], references: [id])
    type      String
    encoding  String
    data      Bytes
    createdAt DateTime @default(now())
}
